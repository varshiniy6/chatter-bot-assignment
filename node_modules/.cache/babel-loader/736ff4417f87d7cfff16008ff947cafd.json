{"ast":null,"code":"var _jsxFileName = \"/home/workspace/reactjs/sessions/authentication-and-authorisation/react-coding-challenges/chatter/src/layouts/CoreLayout/components/IconBackground.js\";\nimport React from 'react';\nimport ICONS from '../constants/icons';\nimport '../styles/_icon-background.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SPACING_PX = 125;\nconst SPACING_MARGIN = SPACING_PX / 4;\n\nfunction getRandomNumber(min, max) {\n  return Math.floor(Math.random() * (max - min)) + min;\n}\n\nfunction getRandomIcon() {\n  return ICONS[getRandomNumber(0, ICONS.length)];\n}\n\nfunction IconRow({\n  numberOfIcons\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"icon-background__row\",\n    children: [...new Array(numberOfIcons)].map(() => {\n      const icon = getRandomIcon();\n      return /*#__PURE__*/_jsxDEV(\"i\", {\n        \"aria-hidden\": \"true\",\n        className: icon.name,\n        style: {\n          transform: icon.noRotation ? void 0 : `rotate(${getRandomNumber(0, 360)}deg)`,\n          fontSize: `${getRandomNumber(icon.minSize || 10, icon.maxSize)}px`,\n          marginTop: `${getRandomNumber(-SPACING_MARGIN, SPACING_MARGIN)}px`,\n          marginLeft: `${getRandomNumber(-SPACING_MARGIN, SPACING_MARGIN)}px`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_c = IconRow;\nexport default function IconBackground() {\n  const {\n    height,\n    width\n  } = document.body.getBoundingClientRect();\n  const numberOfElsPerRow = parseInt((width / SPACING_PX).toFixed());\n  const numberOfRows = parseInt((height / SPACING_PX).toFixed());\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"icon-background\",\n    children: [...new Array(numberOfRows)].map(() => /*#__PURE__*/_jsxDEV(IconRow, {\n      numberOfIcons: numberOfElsPerRow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_c2 = IconBackground;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"IconRow\");\n$RefreshReg$(_c2, \"IconBackground\");","map":{"version":3,"sources":["/home/workspace/reactjs/sessions/authentication-and-authorisation/react-coding-challenges/chatter/src/layouts/CoreLayout/components/IconBackground.js"],"names":["React","ICONS","SPACING_PX","SPACING_MARGIN","getRandomNumber","min","max","Math","floor","random","getRandomIcon","length","IconRow","numberOfIcons","Array","map","icon","name","transform","noRotation","fontSize","minSize","maxSize","marginTop","marginLeft","IconBackground","height","width","document","body","getBoundingClientRect","numberOfElsPerRow","parseInt","toFixed","numberOfRows"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAO,iCAAP;;AAEA,MAAMC,UAAU,GAAG,GAAnB;AACA,MAAMC,cAAc,GAAGD,UAAU,GAAG,CAApC;;AAEA,SAASE,eAAT,CAAyBC,GAAzB,EAA8BC,GAA9B,EAAmC;AACjC,SAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBH,GAAG,GAAGD,GAAvB,CAAX,IAA0CA,GAAjD;AACD;;AAED,SAASK,aAAT,GAAyB;AACvB,SAAOT,KAAK,CAACG,eAAe,CAAC,CAAD,EAAIH,KAAK,CAACU,MAAV,CAAhB,CAAZ;AACD;;AAED,SAASC,OAAT,CAAiB;AAAEC,EAAAA;AAAF,CAAjB,EAAoC;AAClC,sBACE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA,cACG,CAAC,GAAG,IAAIC,KAAJ,CAAUD,aAAV,CAAJ,EAA8BE,GAA9B,CAAkC,MAAM;AACvC,YAAMC,IAAI,GAAGN,aAAa,EAA1B;AAEA,0BACE;AACE,uBAAY,MADd;AAEE,QAAA,SAAS,EAAEM,IAAI,CAACC,IAFlB;AAGE,QAAA,KAAK,EAAE;AACLC,UAAAA,SAAS,EAAEF,IAAI,CAACG,UAAL,GAAkB,KAAK,CAAvB,GAA4B,UAASf,eAAe,CAAC,CAAD,EAAI,GAAJ,CAAS,MADnE;AAELgB,UAAAA,QAAQ,EAAG,GAAEhB,eAAe,CAACY,IAAI,CAACK,OAAL,IAAgB,EAAjB,EAAqBL,IAAI,CAACM,OAA1B,CAAmC,IAF1D;AAGLC,UAAAA,SAAS,EAAG,GAAEnB,eAAe,CAAC,CAACD,cAAF,EAAkBA,cAAlB,CAAkC,IAH1D;AAILqB,UAAAA,UAAU,EAAG,GAAEpB,eAAe,CAAC,CAACD,cAAF,EAAkBA,cAAlB,CAAkC;AAJ3D;AAHT;AAAA;AAAA;AAAA;AAAA,cADF;AAYD,KAfA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;KArBQS,O;AAuBT,eAAe,SAASa,cAAT,GAA0B;AACvC,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAoBC,QAAQ,CAACC,IAAT,CAAcC,qBAAd,EAA1B;AACA,QAAMC,iBAAiB,GAAGC,QAAQ,CAAC,CAACL,KAAK,GAAGzB,UAAT,EAAqB+B,OAArB,EAAD,CAAlC;AACA,QAAMC,YAAY,GAAGF,QAAQ,CAAC,CAACN,MAAM,GAAGxB,UAAV,EAAsB+B,OAAtB,EAAD,CAA7B;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,cACG,CAAC,GAAG,IAAInB,KAAJ,CAAUoB,YAAV,CAAJ,EAA6BnB,GAA7B,CAAiC,mBAChC,QAAC,OAAD;AAAS,MAAA,aAAa,EAAEgB;AAAxB;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;MAZuBN,c","sourcesContent":["import React from 'react';\nimport ICONS from '../constants/icons';\nimport '../styles/_icon-background.scss';\n\nconst SPACING_PX = 125;\nconst SPACING_MARGIN = SPACING_PX / 4;\n\nfunction getRandomNumber(min, max) {\n  return Math.floor(Math.random() * (max - min)) + min;\n}\n\nfunction getRandomIcon() {\n  return ICONS[getRandomNumber(0, ICONS.length)];\n}\n\nfunction IconRow({ numberOfIcons }) {\n  return (\n    <div className=\"icon-background__row\">\n      {[...new Array(numberOfIcons)].map(() => {\n        const icon = getRandomIcon();\n\n        return (\n          <i\n            aria-hidden=\"true\"\n            className={icon.name}\n            style={{\n              transform: icon.noRotation ? void 0 : `rotate(${getRandomNumber(0, 360)}deg)`,\n              fontSize: `${getRandomNumber(icon.minSize || 10, icon.maxSize)}px`,\n              marginTop: `${getRandomNumber(-SPACING_MARGIN, SPACING_MARGIN)}px`,\n              marginLeft: `${getRandomNumber(-SPACING_MARGIN, SPACING_MARGIN)}px`,\n            }}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default function IconBackground() {\n  const { height, width } = document.body.getBoundingClientRect();\n  const numberOfElsPerRow = parseInt((width / SPACING_PX).toFixed());\n  const numberOfRows = parseInt((height / SPACING_PX).toFixed());\n\n  return (\n    <div className=\"icon-background\">\n      {[...new Array(numberOfRows)].map(() => (\n        <IconRow numberOfIcons={numberOfElsPerRow} />\n      ))}\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}